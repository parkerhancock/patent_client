# ********************************************************************************
# *  WARNING: This code is automatically generated by unasync.py. Do not edit!   *
# ********************************************************************************
import lxml.etree as ET

from ..http_client import PatentClientAsyncHttpClient
from .auth import ops_auth
from patent_client import function_cache


class LegalAsyncApi:
    http_client = PatentClientAsyncHttpClient(auth=ops_auth)

    @classmethod
    @function_cache
    def get_legal(cls, doc_number, doc_type="publication", format="docdb"):
        url = f"http://ops.epo.org/3.2/rest-services/legal/{doc_type}/{format}/{doc_number}"
        response = cls.http_client.get(url)
        response.raise_for_status()
        return ET.fromstring(response.content)

    @classmethod
    @function_cache
    def get_legal_code_spreadsheet(cls):
        url = "https://www.epo.org/searching-for-patents/data/coverage/weekly.html"
        response = cls.http_client.get(url)
        response.raise_for_status()
        return ET.HTML(response.text)
